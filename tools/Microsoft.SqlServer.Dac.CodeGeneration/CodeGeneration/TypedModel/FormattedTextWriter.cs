using System;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Globalization;
using System.CodeDom.Compiler;

namespace Microsoft.SqlServer.Dac.CodeGeneration.TypedModel
{
    public class FormattedTextWriter : IndentedTextWriter
    {
        public FormattedTextWriter(StringBuilder builder, string indentString = "    ") : base(new StringWriter(builder), indentString)
        {
            Builder = builder;
        }

        public StringBuilder Builder { get; }

        public override IFormatProvider FormatProvider
        {
            get
            {
                return CultureInfo.CurrentCulture;
            }
        }

        public override Encoding Encoding
        {
            get
            {
                return Encoding.GetEncoding("utf-16");
            }
        }

        public override string NewLine
        {
            get
            {
                return Environment.NewLine;
            }

            set
            {
            }
        }

        public void WriteFileHeader()
        {
            WriteLine($"//------------------------------------------------------------------------------");
            WriteLine($"// <auto-generated>");
            WriteLine($"//     This code was generated by a tool.");
            WriteLine($"//     Runtime Version:4.0.30319.42000");
            WriteLine($"//");
            WriteLine($"//     Changes to this file may cause incorrect behavior and will be lost if");
            WriteLine($"//     the code is regenerated.");
            WriteLine($"// </auto-generated>");
            WriteLine($"//------------------------------------------------------------------------------");
            WriteLine();
        }

        public IDisposable StartBlock()
        {
            return new CodeBlock(this);
        }

        public IDisposable BeginRegion(string name = "")
        {
            return new RegionBlock(this, name);
        }

        public void PushIndent()
        {
            Indent++;
        }

        public void PopIndent()
        {
            Indent--;
        }

        public override string ToString()
        {
            return Builder.ToString();
        }

        private struct CodeBlock : IDisposable
        {
            private FormattedTextWriter _writer;

            public CodeBlock(FormattedTextWriter writer)
            {
                _writer = writer;
                _writer.WriteLine("{");
                _writer.PushIndent();
            }

            public void Dispose()
            {
                _writer.PopIndent();
                _writer.WriteLine("}");
            }
        }

        private struct RegionBlock : IDisposable
        {
            private FormattedTextWriter _writer;
            private readonly string _text;
            public RegionBlock(FormattedTextWriter writer, string text = "")
            {
                _text = text;
                _writer = writer;
                _writer.WriteLine($"#region {text}");
                _writer.WriteLine();
            }

            public void Dispose()
            {
                _writer.WriteLine();
                _writer.WriteLine($"#endregion {_text}");
            }
        }
    }
}
